# Generated by Django 2.2 on 2020-02-20 13:30

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='企业名称')),
                ('company_code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='企业识别码')),
                ('company_address', models.TextField(blank=True, max_length=2000, null=True, verbose_name='企业地址')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用户等级',
                'verbose_name_plural': '用户等级',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DistrictLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='辖区等级')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '辖区等级',
                'verbose_name_plural': '辖区等级',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_code', models.SmallIntegerField(blank=True, null=True, unique=True, verbose_name='等级编号')),
                ('level_name', models.CharField(max_length=100, null=True, unique=True, verbose_name='等级名称')),
                ('level_desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='等级描述')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用户等级',
                'verbose_name_plural': '用户等级',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ChinaDistrict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='电话区号')),
                ('ad_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='辖区编号')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='辖区名称')),
                ('center', models.CharField(blank=True, max_length=100, null=True, verbose_name='中心坐标')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.DistrictLevel', verbose_name='辖区等级')),
                ('parent_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.ChinaDistrict', verbose_name='上级辖区')),
            ],
            options={
                'verbose_name': '中国行政区',
                'verbose_name_plural': '中国行政区',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WxUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('openid', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('nick_name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='昵称')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男'), (2, '女'), (0, '未知')], null=True, verbose_name='性别')),
                ('language', models.CharField(blank=True, max_length=100, null=True, verbose_name='语言')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='城市')),
                ('province', models.CharField(blank=True, max_length=200, null=True, verbose_name='省份')),
                ('country', models.CharField(blank=True, max_length=200, null=True, verbose_name='国家')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('desc', models.TextField(blank=True, max_length=2000, null=True, verbose_name='描述')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='手机号')),
                ('is_owner', models.BooleanField(default=False, null=True, verbose_name='是商家')),
                ('is_client', models.BooleanField(default=True, null=True, verbose_name='是客户')),
                ('is_manager', models.BooleanField(default=True, null=True, verbose_name='是管理员')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('china_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.ChinaDistrict', verbose_name='所在辖区')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.Company', verbose_name='公司')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.UserLevel', verbose_name='用户等级')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
