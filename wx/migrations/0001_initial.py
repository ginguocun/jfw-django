# Generated by Django 2.2 on 2020-02-23 08:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='WxUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('openid', models.CharField(blank=True, help_text='微信OpenID', max_length=100, null=True, unique=True, verbose_name='微信OpenID')),
                ('avatar_url', models.URLField(blank=True, help_text='头像', null=True, verbose_name='头像')),
                ('nick_name', models.CharField(blank=True, help_text='昵称', max_length=100, null=True, unique=True, verbose_name='昵称')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男'), (2, '女'), (0, '未知')], help_text='性别', null=True, verbose_name='性别')),
                ('language', models.CharField(blank=True, help_text='语言', max_length=100, null=True, verbose_name='语言')),
                ('city', models.CharField(blank=True, help_text='城市', max_length=200, null=True, verbose_name='城市')),
                ('province', models.CharField(blank=True, help_text='省份', max_length=200, null=True, verbose_name='省份')),
                ('country', models.CharField(blank=True, help_text='国家', max_length=200, null=True, verbose_name='国家')),
                ('date_of_birth', models.DateField(blank=True, help_text='出生日期', null=True, verbose_name='出生日期')),
                ('desc', models.TextField(blank=True, help_text='描述', max_length=2000, null=True, verbose_name='描述')),
                ('mobile', models.CharField(blank=True, help_text='手机号', max_length=100, null=True, unique=True, verbose_name='手机号')),
                ('current_role', models.IntegerField(choices=[(0, '游客'), (1, '客户'), (2, '商家')], default=0, help_text='当前用户角色', null=True, verbose_name='当前用户角色')),
                ('is_owner', models.BooleanField(default=False, help_text='是商家', verbose_name='是商家')),
                ('is_client', models.BooleanField(default=True, help_text='是客户', verbose_name='是客户')),
                ('is_manager', models.BooleanField(default=False, help_text='是管理员', verbose_name='是管理员')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish_name', models.CharField(help_text='商品名称', max_length=255, null=True, verbose_name='商品名称')),
                ('dish_image_0', models.ImageField(blank=True, help_text='主照片', null=True, upload_to='dish/', verbose_name='主照片')),
                ('dish_image_1', models.ImageField(blank=True, help_text='照片1', null=True, upload_to='dish/', verbose_name='照片1')),
                ('dish_image_2', models.ImageField(blank=True, help_text='照片2', null=True, upload_to='dish/', verbose_name='照片2')),
                ('dish_image_3', models.ImageField(blank=True, help_text='照片3', null=True, upload_to='dish/', verbose_name='照片3')),
                ('dish_desc', models.TextField(blank=True, help_text='菜品描述', max_length=2000, null=True, verbose_name='菜品描述')),
                ('dish_price', models.DecimalField(decimal_places=2, default=18.0, help_text='商品价格', max_digits=9, null=True, verbose_name='商品价格')),
                ('is_active', models.BooleanField(default=True, help_text='是否有效', verbose_name='是否有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, help_text='审核人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dish_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dish_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DistrictLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(help_text='辖区等级', max_length=100, null=True, unique=True, verbose_name='辖区等级')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '辖区等级',
                'verbose_name_plural': '辖区等级',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_code', models.CharField(blank=True, help_text='订单编号', max_length=255, null=True, unique=True, verbose_name='订单编号')),
                ('order_date', models.DateField(help_text='订单日期', null=True, verbose_name='订单日期')),
                ('order_type', models.IntegerField(choices=[(0, '早餐'), (1, '午餐'), (2, '下午茶'), (3, '晚餐'), (4, '夜宵'), (5, '其他')], default=1, help_text='订餐类型 (0-->早餐, 1-->午餐, 2-->下午茶, 3-->晚餐, 4-->夜宵, 5-->其他)', null=True, verbose_name='订餐类型')),
                ('deliver_time', models.TimeField(blank=True, help_text='送餐时间', null=True, verbose_name='送餐时间')),
                ('total_marked_price', models.DecimalField(blank=True, decimal_places=2, help_text='订单标价', max_digits=9, null=True, verbose_name='订单标价')),
                ('total_discount', models.DecimalField(blank=True, decimal_places=2, help_text='订单折扣', max_digits=9, null=True, verbose_name='订单折扣')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, help_text='订单金额', max_digits=9, null=True, verbose_name='订单金额')),
                ('item_count', models.IntegerField(blank=True, help_text='产品数量', null=True, verbose_name='产品数量')),
                ('is_submitted', models.BooleanField(default=False, help_text='已经提交', verbose_name='已经提交')),
                ('is_payed', models.BooleanField(default=False, help_text='已经支付', verbose_name='已经支付')),
                ('is_active', models.BooleanField(default=True, help_text='是否有效', verbose_name='是否有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('client', models.ForeignKey(help_text='用户', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_code', models.SmallIntegerField(blank=True, help_text='等级编号', null=True, unique=True, verbose_name='等级编号')),
                ('level_name', models.CharField(help_text='等级名称', max_length=100, null=True, unique=True, verbose_name='等级名称')),
                ('level_desc', models.TextField(blank=True, help_text='等级描述', max_length=1000, null=True, verbose_name='等级描述')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用户等级',
                'verbose_name_plural': '用户等级',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(help_text='餐馆名称', max_length=255, null=True, unique=True, verbose_name='餐馆名称')),
                ('restaurant_code', models.CharField(blank=True, help_text='餐馆识别码', max_length=255, null=True, verbose_name='餐馆识别码')),
                ('contact_person', models.CharField(help_text='联系人', max_length=255, null=True, verbose_name='联系人')),
                ('contact_mobile', models.CharField(help_text='联系方式', max_length=255, null=True, verbose_name='联系方式')),
                ('restaurant_address', models.TextField(help_text='餐馆地址', max_length=2000, null=True, verbose_name='餐馆地址')),
                ('center', models.CharField(blank=True, help_text='中心坐标', max_length=255, null=True, verbose_name='中心坐标')),
                ('is_confirmed', models.BooleanField(default=False, help_text='已审核', verbose_name='已审核')),
                ('is_active', models.BooleanField(default=False, help_text='有效', verbose_name='有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, help_text='审核人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
            ],
            options={
                'verbose_name': '餐馆',
                'verbose_name_plural': '餐馆',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_count', models.IntegerField(default=1, help_text='数量', null=True, verbose_name='数量')),
                ('marked_price', models.DecimalField(blank=True, decimal_places=2, help_text='标价', max_digits=9, null=True, verbose_name='标价')),
                ('payed_unit_price', models.DecimalField(blank=True, decimal_places=2, help_text='单价', max_digits=9, null=True, verbose_name='单价')),
                ('payed_total_price', models.DecimalField(blank=True, decimal_places=2, help_text='小计', max_digits=9, null=True, verbose_name='小计')),
                ('is_active', models.BooleanField(default=True, help_text='是否有效', verbose_name='是否有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('dish', models.ForeignKey(help_text='商品', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.Dish', verbose_name='商品')),
                ('order', models.ForeignKey(help_text='订单', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.Order', verbose_name='订单')),
            ],
            options={
                'verbose_name': '订单明细',
                'verbose_name_plural': '订单明细',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='restaurant',
            field=models.ForeignKey(help_text='餐馆', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.Restaurant', verbose_name='餐馆'),
        ),
        migrations.CreateModel(
            name='DishTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(help_text='标签', max_length=255, null=True, unique=True, verbose_name='标签')),
                ('is_confirmed', models.BooleanField(default=True, help_text='已审核', verbose_name='已审核')),
                ('is_active', models.BooleanField(default=True, help_text='是否有效', verbose_name='是否有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, help_text='审核人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dish_tag_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dish_tag_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='dish',
            name='dish_tag',
            field=models.ManyToManyField(blank=True, help_text='标签', to='wx.DishTag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='dish',
            name='restaurant',
            field=models.ForeignKey(help_text='餐馆', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.Restaurant', verbose_name='餐馆'),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(help_text='企业名称', max_length=255, null=True, unique=True, verbose_name='企业名称')),
                ('company_code', models.CharField(blank=True, help_text='企业识别码', max_length=255, null=True, unique=True, verbose_name='企业识别码')),
                ('company_address', models.TextField(help_text='企业地址', max_length=2000, null=True, verbose_name='企业地址')),
                ('contact_person', models.CharField(help_text='联系人', max_length=255, null=True, verbose_name='联系人')),
                ('contact_mobile', models.CharField(help_text='联系方式', max_length=255, null=True, verbose_name='联系方式')),
                ('center', models.CharField(blank=True, help_text='中心坐标', max_length=255, null=True, verbose_name='中心坐标')),
                ('deliver_time_0', models.TimeField(default='8:00:00', help_text='早餐送餐时间', null=True, verbose_name='早餐送餐时间')),
                ('deliver_time_1', models.TimeField(default='11:50:00', help_text='午餐送餐时间', null=True, verbose_name='午餐送餐时间')),
                ('deliver_time_2', models.TimeField(default='15:00:00', help_text='下午茶送餐时间', null=True, verbose_name='下午茶送餐时间')),
                ('deliver_time_3', models.TimeField(default='17:50:00', help_text='晚餐送餐时间', null=True, verbose_name='晚餐送餐时间')),
                ('deliver_time_4', models.TimeField(default='20:00:00', help_text='夜宵送餐时间', null=True, verbose_name='夜宵送餐时间')),
                ('is_confirmed', models.BooleanField(default=False, help_text='已审核', verbose_name='已审核')),
                ('is_active', models.BooleanField(default=False, help_text='有效', verbose_name='有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, help_text='审核人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('restaurant', models.ManyToManyField(blank=True, help_text='可见餐馆', related_name='company_related_restaurant', to='wx.Restaurant', verbose_name='可见餐馆')),
            ],
            options={
                'verbose_name': '企业',
                'verbose_name_plural': '企业',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ChinaDistrict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_code', models.CharField(blank=True, help_text='电话区号', max_length=100, null=True, verbose_name='电话区号')),
                ('ad_code', models.CharField(blank=True, help_text='辖区编号', max_length=100, null=True, verbose_name='辖区编号')),
                ('name', models.CharField(help_text='辖区名称', max_length=100, null=True, verbose_name='辖区名称')),
                ('center', models.CharField(blank=True, help_text='中心坐标', max_length=100, null=True, verbose_name='中心坐标')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('level', models.ForeignKey(blank=True, help_text='辖区等级', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.DistrictLevel', verbose_name='辖区等级')),
                ('parent_district', models.ForeignKey(blank=True, help_text='上级辖区', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.ChinaDistrict', verbose_name='上级辖区')),
            ],
            options={
                'verbose_name': '中国行政区',
                'verbose_name_plural': '中国行政区',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='wxuser',
            name='china_district',
            field=models.ForeignKey(blank=True, help_text='所在辖区', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.ChinaDistrict', verbose_name='所在辖区'),
        ),
        migrations.AddField(
            model_name='wxuser',
            name='company',
            field=models.ForeignKey(blank=True, help_text='企业', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wx_user', to='wx.Company', verbose_name='企业'),
        ),
        migrations.AddField(
            model_name='wxuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='wxuser',
            name='restaurant',
            field=models.ForeignKey(blank=True, help_text='餐馆', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.Restaurant', verbose_name='餐馆'),
        ),
        migrations.AddField(
            model_name='wxuser',
            name='user_level',
            field=models.ForeignKey(blank=True, help_text='用户等级', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.UserLevel', verbose_name='用户等级'),
        ),
        migrations.AddField(
            model_name='wxuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='CompanyEmployee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(help_text='姓名', max_length=200, null=True, verbose_name='姓名')),
                ('mobile', models.CharField(help_text='手机号', max_length=20, null=True, unique=True, verbose_name='手机号')),
                ('is_confirmed', models.BooleanField(default=False, help_text='已审核', verbose_name='已审核')),
                ('is_active', models.BooleanField(default=False, help_text='有效', verbose_name='有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('company', models.ForeignKey(help_text='企业', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wx.Company', verbose_name='企业')),
                ('confirmed_by', models.ForeignKey(blank=True, help_text='创建人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_employee_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, help_text='创建人员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_employee_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('user', models.ForeignKey(blank=True, help_text='用户', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_employee_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '企业员工名单',
                'verbose_name_plural': '企业员工名单',
                'ordering': ['id'],
                'unique_together': {('company', 'employee_name', 'mobile')},
            },
        ),
    ]
